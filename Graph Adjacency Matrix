class Graph:
    def __init__(self, num_vertices):
        """Создаем граф с заданным количеством вершин."""
        self.num_vertices = num_vertices
        # Инициализация матрицы смежности нулями
        self.adjacency_matrix = [[0 for _ in range(num_vertices)] for _ in range(num_vertices)]

    def add_edge(self, vertex1, vertex2, weight=1):
        """Добавляет ребро между вершинами vertex1 и vertex2 с указанным весом (по умолчанию 1)."""
        self.adjacency_matrix[vertex1][vertex2] = weight
        self.adjacency_matrix[vertex2][vertex1] = weight  # Убираем эту строку для ориентированного графа

    def display(self):
        """Выводит матрицу смежности."""
        for row in self.adjacency_matrix:
            print(" ".join(map(str, row)))


# Пример использования
num_vertices = 5  # Количество вершин
graph = Graph(num_vertices)

# Добавляем ребра
graph.add_edge(0, 1)
graph.add_edge(0, 2)
graph.add_edge(1, 3)
graph.add_edge(2, 3)
graph.add_edge(3, 4)

graph.display()
